# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass sshfs
          sudo apt-get install libglu1

      - name: Install Connectome Workbench
        run: |
          wget  https://www.humanconnectome.org/storage/app/media/workbench/workbench-linux64-v1.5.0.zip
          unzip workbench-linux64-v1.5.0.zip -d /home/runner/work
          echo 'export PATH=$PATH:/home/runner/work/workbench/bin_linux64' >> ~/.bashrc
          source ~/.bashrc
          /home/runner/work/workbench/bin_linux64/wb_command -version
      - name: Connect to Proxy
        run: |
          sshpass -p ${{ secrets.PASSWORD }} ssh -v -o StrictHostKeyChecking=no ${{ secrets.USER }}@login.bic.mni.mcgill.ca 'nc -q0 login.bic.mni.mcgill.ca 22' &

      - name: Create Mount Point
        run: |
            sudo mkdir -p /mnt/z
            sudo chown -R $(whoami) /mnt/z
      
      - name: Mount Filesystem
        run: |
          sshfs ${{ secrets.USER }}@login.bic.mni.mcgill.ca:/data/mica1/03_projects/ian/pytest_data /mnt/z -v -o password_stdin <<<"${{ secrets.PASSWORD }}"
          ls /mnt/z/BIDS_MICs_Test
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
